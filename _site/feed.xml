<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cédric Colas's page</title>
    <description>Personal website of Cédric Colas.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Mock Blog Post</title>
        <description>&lt;p&gt;This is an empty post to illustrate the pagination component with Pixyll.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Mar 2019 12:21:29 +0100</pubDate>
        <link>http://localhost:4000/mock_blog_post</link>
        <guid isPermaLink="true">http://localhost:4000/mock_blog_post</guid>
      </item>
    
      <item>
        <title>How Many Random Seeds ?</title>
        <description>&lt;p&gt;Reproducibility in Machine Learning and Deep Reinforcement Learning in particular has become a serious issue in the recent years. Reproducing an RL paper can turn out to be much more complicated than you thought, see this blog post about &lt;a href=&quot;http://amid.fish/reproducing-deep-rl&quot;&gt;lessons learned from reproducing a deep RL paper&lt;/a&gt;. Indeed, codebases are not always released and scientific papers often omit parts of the implementation tricks. Recently, Henderson et al. conducted a thorough investigation of various parameters causing this reproducibility crisis &lt;a href=&quot;https://arxiv.org/abs/1709.06560&quot;&gt;[Henderson et al., 2017]&lt;/a&gt;. They used trendy deep RL algorithms such as DDPG, ACKTR, TRPO and PPO with OpenAI Gym popular benchmarks such as Half-Cheetah, Hopper and Swimmer to study the effects of the codebase, the size of the networks, the activation function, the reward scaling or the random seeds. Among other results, they showed that different implementations of the same algorithm with the same set of hyperparameters led to drastically different results.&lt;/p&gt;

&lt;p&gt;Perhaps the most surprising thing is this: running the same algorithm 10 times with the same hyper-parameters using 10 different random seeds and averaging performance over two splits of 5 seeds can lead to learning curves seemingly coming from different statistical distributions. Then, they present this table:&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/8/899a492f80f4d77be643094fffdc99375c02275b.png&quot; height=&quot;150&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 1: Number of trials reported during evaluation in various works, from [Henderson et al., 2017].&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;This table shows that all the deep RL papers reviewed by Henderson et al. use less than 5 seeds. Even worse, some papers actually report the average of the best performing runs! As demonstrated in Henderson et al., these methodologies can lead to claim that two algorithms performances are different when they are not. A solution to this problem is to use more random seeds, to average more different trials to obtain a more robust measure of your algorithm performance. OK, but how many more? Should I use 10, should I use 100 as in &lt;a href=&quot;https://arxiv.org/pdf/1803.07055%20in.pdf&quot;&gt;[Mania et al, 2018]&lt;/a&gt;? The answer is, of course, &lt;i&gt;it depends&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If you read this blog, you must be in the following situation: you want to compare the performance of two algorithms to determine which one performs best in a given environment. Unfortunately, two runs of the same algorithm often yield different measures of performance. This might be due to various factors such as the seed of the random generators (called &lt;em&gt;random seed&lt;/em&gt; or &lt;em&gt;seed&lt;/em&gt; thereafter), the initial conditions of the agent, the stochasticity of the environment, etc.&lt;/p&gt;

&lt;p&gt;Part of the statistical procedures described in this article are available on Github &lt;a href=&quot;https://github.com/flowersteam/rl-difference-testing&quot;&gt;here&lt;/a&gt;. The article is available on ArXiv &lt;a href=&quot;https://arxiv.org/abs/1806.08295&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;definition-of-the-statistical-problem&quot;&gt;Definition of the statistical problem&lt;/h3&gt;

&lt;p&gt;The performance of an algorithm can be modeled as a &lt;em&gt;random variable&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; and running this algorithm in an environment results in a &lt;em&gt;realization&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt;. Repeating the procedure &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; times, you obtain a statistical &lt;em&gt;sample&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;x=(x^1, .., x^N)&lt;/script&gt;. A random variable is usually characterized by its &lt;em&gt;mean&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt; and its &lt;em&gt;standard deviation&lt;/em&gt;, noted &lt;script type=&quot;math/tex&quot;&gt;\sigma&lt;/script&gt;. Of course, you do not know what are the values of &lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\sigma&lt;/script&gt;. The only thing you can do is to compute their estimations &lt;script type=&quot;math/tex&quot;&gt;\overline{x}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;s&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\large
\overline{x} \mathrel{\hat=} \sum\limits_{i=1}^n{x^i},  s \mathrel{\hat=}\sqrt{\frac{\sum_{i+1}^{N}(x^i-\overline{x})^2}{N-1}},&lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;\overline{x}&lt;/script&gt; is called the empirical mean, and &lt;script type=&quot;math/tex&quot;&gt;s&lt;/script&gt; is called the empirical standard deviation. The larger the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;, the more confidence you can be 
in the 
estimations.&lt;/p&gt;

&lt;p&gt;Here, two algorithms with respective performances &lt;script type=&quot;math/tex&quot;&gt;X_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X_2&lt;/script&gt; are compared. If &lt;script type=&quot;math/tex&quot;&gt;X_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X_2&lt;/script&gt; follow normal distributions, the random variable describing their difference &lt;script type=&quot;math/tex&quot;&gt;(X_{\text{diff}} = X_1-X_2)&lt;/script&gt; also follows a normal distribution with parameters &lt;script type=&quot;math/tex&quot;&gt;{\sigma_{diff}=(\sigma_1^2+\sigma_2^2)^{1/2}}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}=\mu_1-\mu_2&lt;/script&gt;. In this 
case, the estimator of the mean of &lt;script type=&quot;math/tex&quot;&gt;X_{\text{diff}}&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}} = \overline{x}_1-\overline{x}_2&lt;/script&gt; and the estimator of &lt;script type=&quot;math/tex&quot;&gt;{\sigma_{\text{diff}}}&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;{s_{\text{diff}}=\sqrt{s_1^2+s_2^2}}&lt;/script&gt;. The &lt;em&gt;effect size&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; can be defined as the difference between the mean performances of both algorithms: &lt;script type=&quot;math/tex&quot;&gt;{\epsilon = \mu_1-\mu_2}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Testing for a difference between the performances of two algorithms ( &lt;script type=&quot;math/tex&quot;&gt;\mu_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mu_2&lt;/script&gt;) is mathematically equivalent to testing a difference between their difference 
&lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}&lt;/script&gt; and 0. The second point of view is considered from now on. We draw a sample &lt;script type=&quot;math/tex&quot;&gt;x_{\text{diff}}&lt;/script&gt; from &lt;script type=&quot;math/tex&quot;&gt;X_{\text{diff}}&lt;/script&gt; by subtracting two samples &lt;script type=&quot;math/tex&quot;&gt;x_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt; obtained from &lt;script type=&quot;math/tex&quot;&gt;X_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X_2&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 1&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To illustrate the concepts developed in this article, let us take two algorithms (&lt;script type=&quot;math/tex&quot;&gt;Algo 1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;Algo 2&lt;/script&gt;) and compare them on the Half-Cheetah environment from the &lt;a href=&quot;https://gym.openai.com/&quot;&gt;OpenAI Gym 
framework&lt;/a&gt;. The actual algorithms used are not so important here, and will be revealed later. First, we run a preliminary study with &lt;script type=&quot;math/tex&quot;&gt;N=5&lt;/script&gt; random seeds 
for each and plot the results in Figure 2. This figure shows the average learning curves, with the &lt;script type=&quot;math/tex&quot;&gt;95\%&lt;/script&gt; confidence interval. Each point of a learning curve is the average 
cumulated reward over &lt;script type=&quot;math/tex&quot;&gt;10&lt;/script&gt; evaluation episodes. The &lt;em&gt;measure of performance&lt;/em&gt; of an algorithm is the average performance over the last &lt;script type=&quot;math/tex&quot;&gt;10&lt;/script&gt; points (i.e. last &lt;script type=&quot;math/tex&quot;&gt;100&lt;/script&gt; evaluation episodes). From the figure, it seems that &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; performs better than &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt;. Moreover, the confidence intervals do not overlap much at the end. Of course, we need to run statistical tests before drawing any conclusion.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/e/e5e46b3919dba623d48357cf0abb05c2d14d2fd3.jpg&quot; height=&quot;300&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 2: Algo1 versus Algo2 on Half-Cheetah. Mean and confidence intervals for 5 seeds&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;h3 id=&quot;comparing-performances-with-a-difference-test&quot;&gt;Comparing performances with a difference test&lt;/h3&gt;

&lt;p&gt;In a &lt;em&gt;difference test&lt;/em&gt;, statisticians define the &lt;em&gt;null hypothesis&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; and the &lt;em&gt;alternate hypothesis&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt;. &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; assumes no difference whereas &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt; assumes one:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}} = 0&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}} \neq 0&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These hypothesis refers to the two-tail case. When you have an a-priori on which algorithm performs best, (let us say &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt;), you can use the one-tail version:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}} \leq 0&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}  &gt; 0&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At first, a statistical test always assumes the null hypothesis. Once a sample &lt;script type=&quot;math/tex&quot;&gt;x_{\text{diff}}&lt;/script&gt; is collected from &lt;script type=&quot;math/tex&quot;&gt;X_{\text{diff}}&lt;/script&gt;, you can estimate the probability &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; 
(called &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value) of observing data as extreme, under the null hypothesis assumption. By &lt;em&gt;extreme&lt;/em&gt;, one means far from the null hypothesis (&lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt; far 
from &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;). The &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value answers the following question: &lt;em&gt;how probable is it to observe this sample or a more extreme one, given that there is no true difference in the 
performances of both algorithms?&lt;/em&gt; Mathematically, we can write it this way for the one-tail case:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p\text{-value} = P(X_{\text{diff}}\geq \overline{x}_{\text{diff}} \mid H_0),&lt;/script&gt;

&lt;p&gt;and this way for the two-tail case:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p{\normalsize \text{-value}}=\left\{
    \begin{array}{ll}
    P(X_{\text{diff}}\geq \overline{x}_{\text{diff}} \hspace{2pt} |\hspace{2pt} H_0)\hspace{0.5cm} \text{if} \hspace{5pt} \overline{x}_{\text{diff}}&gt;0\\
    P(X_{\text{diff}}\leq \overline{x}_{\text{diff}} \hspace{2pt} |\hspace{2pt} H_0) \hspace{0.5cm} \text{if} \hspace{5pt} \overline{x}_{\text{diff}}\leq0.
    \end{array}
    \right.&lt;/script&gt;

&lt;p&gt;When this probability becomes really low, it means that it is highly improbable that two algorithms with no performance difference produced the collected sample 
&lt;script type=&quot;math/tex&quot;&gt;x_{\text{diff}}&lt;/script&gt;. A difference is called &lt;em&gt;significant at significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;&lt;/em&gt; when the &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value is lower than &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; in the one-tail case, and lower than 
&lt;script type=&quot;math/tex&quot;&gt;\alpha/2&lt;/script&gt; in the two tail case to account for the two sided test. Usually &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; is set to &lt;script type=&quot;math/tex&quot;&gt;0.05&lt;/script&gt; or lower. In this case, the low probability to observe the collected 
sample under hypothesis &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; results in its rejection. Note that a significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha=0.05&lt;/script&gt; still results in &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt; chance out of &lt;script type=&quot;math/tex&quot;&gt;20&lt;/script&gt; to claim a false positive, to claim that there is a true difference when there is not.&lt;/p&gt;

&lt;p&gt;Another way to see this, is to consider confidence intervals. Two kinds of confidence intervals can be computed:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;CI_1&lt;/script&gt;: The &lt;script type=&quot;math/tex&quot;&gt;100\cdot(1-\alpha)\%&lt;/script&gt; confidence interval for the mean of the difference &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}&lt;/script&gt; given a sample &lt;script type=&quot;math/tex&quot;&gt;x_{\text{diff}}&lt;/script&gt; characterized by 
&lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;s_{\text{diff}}&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;CI_2&lt;/script&gt;: The &lt;script type=&quot;math/tex&quot;&gt;100\cdot(1-\alpha)\%&lt;/script&gt; confidence interval for any realization of &lt;script type=&quot;math/tex&quot;&gt;X_{\text{diff}}&lt;/script&gt; under &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; (assuming &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}=0&lt;/script&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Having &lt;script type=&quot;math/tex&quot;&gt;CI_2&lt;/script&gt; that does not include &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt; is mathematically equivalent to a &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value below &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;. In both cases, it means there is less than &lt;script type=&quot;math/tex&quot;&gt;100\cdot\alpha\%&lt;/script&gt; chance that &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}=0&lt;/script&gt; under &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;. When &lt;script type=&quot;math/tex&quot;&gt;CI_1&lt;/script&gt; does not include &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;, we are also &lt;script type=&quot;math/tex&quot;&gt;100\cdot(1-\alpha)\%&lt;/script&gt; confident that &lt;script type=&quot;math/tex&quot;&gt;\mu\neq0&lt;/script&gt;, without assuming &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;. Proving one of these things leads to conclude that the difference is &lt;em&gt;significant at level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Two types of errors can be made in statistics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;type-I error&lt;/strong&gt; &lt;em&gt;rejects &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when it is true&lt;/em&gt;, also called &lt;em&gt;false positive&lt;/em&gt;. This corresponds to claiming the superiority of an algorithm over another when there is no true difference. Note that we call both the significance level and the probability of type-I error &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; because they both refer to the same concept. Choosing a significance level of &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; enforces a probability of type-I error &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;, under the assumptions of the statistical test.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;type-II error&lt;/strong&gt; &lt;em&gt;fails to reject &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when it is false&lt;/em&gt;, also called &lt;em&gt;false negative&lt;/em&gt;. This corresponds to missing the opportunity to publish an article when there was actually something to be found.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}} \leq 0&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt;: &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}  &gt; 0&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;In the two-tail case, the null hypothesis &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}=0&lt;/script&gt;. The alternative hypothesis &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}\neq0&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value &lt;script type=&quot;math/tex&quot;&gt;=P(X_{\text{diff}}\geq \overline{x}_{\text{diff}}  \mid H_0)&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;A difference is said &lt;em&gt;statistically significant&lt;/em&gt; when a statistical test passed. One can reject the null hypothesis when 1) &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
&lt;\alpha %]]&gt;&lt;/script&gt;; 2) &lt;script type=&quot;math/tex&quot;&gt;CI_1&lt;/script&gt; does not contain &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;; 3) &lt;script type=&quot;math/tex&quot;&gt;CI_2&lt;/script&gt; does not contain &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;statistically significant&lt;/em&gt; does not refer to the absolute truth. Two types of error can occur. Type-I error rejects &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when it is true. Type-II error fails to reject 
 &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when it is false. &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;select-the-appropriate-statistical-test&quot;&gt;Select the appropriate statistical test&lt;/h2&gt;

&lt;p&gt;You must decide which statistical tests to use in order to assess whether the performance difference is significant or not. As recommended in &lt;a href=&quot;https://arxiv.org/abs/1709.06560&quot;&gt;[Henderson et al., 2017]&lt;/a&gt;, the two-sample t-test and the bootstrap confidence interval test can be used for this purpose. Henderson et al. also advised for the &lt;em&gt;Kolmogorov-Smirnov test&lt;/em&gt;, which tests if two samples comes from the same distribution. This test should not be used to compare RL algorithms because it is unable to prove any order relation.&lt;/p&gt;

&lt;h3 id=&quot;t-test-and-welchs-t-test&quot;&gt;T-test and Welch’s t-test&lt;/h3&gt;

&lt;p&gt;We want to test the hypothesis that two populations have equal means (null hypothesis &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;). A 2-sample t-test can be used when the variances of both populations (both algorithms) are assumed equal. However, this assumption rarely holds when comparing two different algorithms (e.g. DDPG vs TRPO). In this case, an adaptation of the 2-sample t-test for unequal variances called Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test should be used. &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;-tests make a few assumptions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The scale of data measurements must be continuous and ordinal (can be ranked). This is the case in RL.&lt;/li&gt;
  &lt;li&gt;Data is obtained by collecting a representative sample from the population. This seem reasonable in RL.&lt;/li&gt;
  &lt;li&gt;Measurements are independent from one another. This seems reasonable in RL.&lt;/li&gt;
  &lt;li&gt;Data is normally-distributed, or at least bell-shaped. The normal law being a mathematical concept involving infinity, nothing is ever perfectly normally distributed. Moreover, measurements of algorithm performances might follow multi-modal distributions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Under these assumptions, one can compute the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-statistic &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; and the degree of freedom &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt; for the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test as estimated by the Welch–Satterthwaite equation, such as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;t = \frac{x_{\text{diff}}}{\sqrt{\frac{s^2_1+s^2_2}{N}}},  \nu \approx \frac{(N-1)\cdot \Big(s^2_1+s^2_2\Big)^2}{s^4_1+s^4_2},&lt;/script&gt;

&lt;p&gt;with &lt;script type=&quot;math/tex&quot;&gt;x_{\text{diff}} = x_1-x_2&lt;/script&gt;; &lt;script type=&quot;math/tex&quot;&gt;s_1, s_2&lt;/script&gt; the empirical standard deviations of the two samples, and &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; the sample size (same for both algorithms). The &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-statistics are assumed to follow a &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-distribution, which is bell-shaped and whose width depends on the degree of freedom. The higher this degree, the thinner the distribution.&lt;/p&gt;

&lt;p&gt;Figure 3 helps making sense of these concepts. It represents the distribution of the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-statistics corresponding to &lt;script type=&quot;math/tex&quot;&gt;X_{\text{diff}}&lt;/script&gt;, under &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; (left distribution) and under &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt; (right distribution). &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; assumes &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}=0&lt;/script&gt;, the distribution is therefore centered on 0. &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt; assumes a (positive) difference &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}=\epsilon&lt;/script&gt;, the distribution is therefore shifted by the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-value corresponding to &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;t_\epsilon&lt;/script&gt;. Note that we consider the one-tail case here, and test for a positive difference.&lt;/p&gt;

&lt;p&gt;A &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-distribution is defined by its &lt;em&gt;probability density function&lt;/em&gt;&lt;script type=&quot;math/tex&quot;&gt;T_{distrib}^{\nu}(\tau)&lt;/script&gt; (left curve in Figure 3, which is parameterized by &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt;. The &lt;em&gt;cumulative distribution function&lt;/em&gt; &lt;script type=&quot;math/tex&quot;&gt;CDF_{H_0}(t)&lt;/script&gt; is the function evaluating the area under &lt;script type=&quot;math/tex&quot;&gt;T_{distrib}^{\nu}(t)&lt;/script&gt; from &lt;script type=&quot;math/tex&quot;&gt;\tau=-\infty&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;\tau=t&lt;/script&gt;. This allows to write:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p\text{-value} = 1-CDF_{H_0}(t) = 1-\int_{-\infty}^{t} T_{distrib}^{\nu}(\tau) \cdot d\tau.&lt;/script&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/7/703b9d4e3037b266e8fc6b20e020eb84d4405a80.png&quot; height=&quot;220&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 3: Representation of H0 and Ha under the t-test assumptions. Areas under the distributions represented in red, dark blue and light blue correspond to the probability of type-I error alpha, type-II error beta and the statistical power 1-beta respectively. &lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In Figure 3, &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt; represents the critical &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-value to satisfy the significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; in the one-tail case. When &lt;script type=&quot;math/tex&quot;&gt;t=t_\alpha&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value &lt;script type=&quot;math/tex&quot;&gt;=\alpha&lt;/script&gt;. When &lt;script type=&quot;math/tex&quot;&gt;t&gt;t_\alpha&lt;/script&gt;, the &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value is lower than &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and the test rejects &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;. On the other hand, when &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; is lower than &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt;, the &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value is superior to &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and the test fails to reject &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;. As can be seen in the figure, setting the threshold at &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt; might also cause an error of type-II. The rate of this error (&lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;) is represented by the dark blue area: under the hypothesis of a true difference &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; (under &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt;, right distribution), we fail to reject &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; is inferior to &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt;. &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; can therefore be computed mathematically using the &lt;script type=&quot;math/tex&quot;&gt;CDF&lt;/script&gt;:&lt;/p&gt;

&lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;\beta = CDF_{H_a}(t_\alpha) = \int_{-\infty}^{t_\alpha} T_{distrib}^{\nu}(\tau-t_{\epsilon}) \cdot d\tau.&lt;/script&gt;
Using the translation properties of integrals, we can rewrite &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\beta = CDF_{H_0}(t_\alpha-t_{\epsilon}) = \int_{-\infty-t_{\epsilon}=-\infty}^{t_\alpha-t_{\epsilon}} T_{distrib}^{\nu}(\tau) \cdot d\tau.&lt;/script&gt;

&lt;p&gt;The procedure to run a Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test given two samples &lt;script type=&quot;math/tex&quot;&gt;(x_1, x_2)&lt;/script&gt; is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Computing the degree of freedom &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt; and the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-statistic &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; based on &lt;script type=&quot;math/tex&quot;&gt;s_1&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;s_2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;Looking up the &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt; value for the degree of freedom &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt; in a &lt;a href=&quot;http://www.sjsu.edu/faculty/gerstman/StatPrimer/t-table.pdf&quot;&gt;t-table&lt;/a&gt; or by evaluating the inverse of the &lt;script type=&quot;math/tex&quot;&gt;CDF&lt;/script&gt; function in &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;Compare the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-statistic to &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt;. The difference is said statistically significant (&lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; rejected) at level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; when &lt;script type=&quot;math/tex&quot;&gt;t\geq t_\alpha&lt;/script&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
t&lt;t_\alpha %]]&gt;&lt;/script&gt; does not mean there is no difference between the performances of both algorithms. It only means there is not enough evidence to prove its existence with &lt;script type=&quot;math/tex&quot;&gt;100 \cdot (1-\alpha)\%&lt;/script&gt; confidence (it might be a type-II error). Noise might hinder the ability of the test to detect the difference. In this case, increasing the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; could help uncover the difference.&lt;/p&gt;

&lt;p&gt;Selecting the significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; of the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test enforces the probability of type-I error to &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;. However, Figure 3 shows that decreasing this probability boils down to increasing &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt;, which in turn increases the probability of type-II error &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;. One can decrease &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; while keeping &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; constant by increasing the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;. This way, the estimation &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;\overline{\mu}_{\text{diff}}&lt;/script&gt; gets more accurate, which translates in thinner distributions in the figure, resulting in a smaller &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;. The next section gives standard guidelines to select &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; so as to meet requirements for both &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;.&lt;/p&gt;

&lt;h3 id=&quot;bootstrapped-confidence-intervals&quot;&gt;Bootstrapped confidence intervals&lt;/h3&gt;
&lt;p&gt;Bootstrapped confidence interval is a method that does not make any assumption on the distributions of performance differences. It estimates the confidence intervals by re-sampling among the samples actually collected and by computing the mean of each generated sample.&lt;/p&gt;

&lt;p&gt;Given the true mean &lt;script type=&quot;math/tex&quot;&gt;\mu&lt;/script&gt; and standard deviation &lt;script type=&quot;math/tex&quot;&gt;\sigma&lt;/script&gt; of a normal distribution, a simple formula gives the &lt;script type=&quot;math/tex&quot;&gt;95\%&lt;/script&gt; confidence interval. But here, we consider an unknown distribution &lt;script type=&quot;math/tex&quot;&gt;F&lt;/script&gt; (the distribution of performances for a given algorithm). As we saw above, the empirical mean &lt;script type=&quot;math/tex&quot;&gt;\overline{x}&lt;/script&gt; is an unbiased estimate of its true mean, but how do we compute a confidence interval? One solution is to use the &lt;i&gt;bootstrap principle&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;Let us say we have a sample &lt;script type=&quot;math/tex&quot;&gt;x_1, x_2, .., x_N&lt;/script&gt; of measures (performance measures in our case), where &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; is the sample size. The empirical bootstrap sample is obtained by sampling with replacement inside the original sample. This bootstrap sample is noted &lt;script type=&quot;math/tex&quot;&gt;x^*_1, x^*_2, …, x^*_N&lt;/script&gt; and has the same number of measurements &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;. The bootstrap principle then says that, for any statistics &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; computed on the original sample and &lt;script type=&quot;math/tex&quot;&gt;u^*&lt;/script&gt; computed on the bootstrap sample, variations in &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; are well approximated by variations in &lt;script type=&quot;math/tex&quot;&gt;u^*&lt;/script&gt;. More explanations and justifications can be found in &lt;a href=&quot;https://ocw.mit.edu/courses/mathematics/18-05-introduction-to-probability-and-statistics-spring-2014/readings/MIT18_05S14_Reading24.pdf&quot;&gt;this document&lt;/a&gt; from MIT. You can therefore approximate variations of the empirical mean (let’s say its range), by variations of the bootstrapped samples.&lt;/p&gt;

&lt;p&gt;The computation would look like this:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Generate &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; bootstrap samples of size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; from the original sample &lt;script type=&quot;math/tex&quot;&gt;x_1&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; samples from from the original sample &lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;Compute the empirical mean for each sample: &lt;script type=&quot;math/tex&quot;&gt;\mu^1_1, \mu^2_1, ..., \mu^B_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mu^1_2, \mu^2_2, ..., \mu^B_2&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;Compute the differences &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}^{1:B} = \mu_1^{1:B}-\mu_2^{1:B}&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;Compute the bootstrapped confidence interval at &lt;script type=&quot;math/tex&quot;&gt;100\cdot(1-\alpha)\%&lt;/script&gt;. This is basically the range between the   &lt;script type=&quot;math/tex&quot;&gt;100 \cdot\alpha/2&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;100\cdot(1-\alpha)/2&lt;/script&gt; percentiles of the vector  &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}}^{1:B}&lt;/script&gt; (e.g. for &lt;script type=&quot;math/tex&quot;&gt;\alpha=0.05&lt;/script&gt;, the range between the &lt;script type=&quot;math/tex&quot;&gt;2.5^{th}&lt;/script&gt; and the &lt;script type=&quot;math/tex&quot;&gt;97.5^{th}&lt;/script&gt; percentiles).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The number of bootstrap samples &lt;script type=&quot;math/tex&quot;&gt;B&lt;/script&gt; should be chosen large (e.g. &lt;script type=&quot;math/tex&quot;&gt;&gt;1000&lt;/script&gt;). If the confidence interval bounds does not contain &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;, it means that you are confident at &lt;script type=&quot;math/tex&quot;&gt;100 \cdot (1-\alpha)&lt;/script&gt;% that the difference is either positive (both bounds positive) or negative (both bounds negative). You just found a statistically significant difference between the performances of your two algorithms. You can find a nice implementation of this &lt;a href=&quot;https://github.com/facebookincubator/bootstrapped&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 1 (continued)&lt;/em&gt;&lt;/strong&gt;
Here, the type-I error requirement is set to &lt;script type=&quot;math/tex&quot;&gt;\alpha=0.05&lt;/script&gt;. Running the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test and the bootstrap confidence interval test with two samples &lt;script type=&quot;math/tex&quot;&gt;(x_1,x_2)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;5&lt;/script&gt; seeds 
each leads to a &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value of &lt;script type=&quot;math/tex&quot;&gt;0.031&lt;/script&gt; and a bootstrap confidence interval such that &lt;script type=&quot;math/tex&quot;&gt;P\big(\mu_{\text{diff}} \in [259, 1564]\big) = 0.05&lt;/script&gt;. Since the &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value is below the significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and the &lt;script type=&quot;math/tex&quot;&gt;CI_1&lt;/script&gt; confidence interval does not include &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;, both test passed. This means both tests found a significant difference between the performances of &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt; with a &lt;script type=&quot;math/tex&quot;&gt;95\%&lt;/script&gt; confidence. There should have been only &lt;script type=&quot;math/tex&quot;&gt;5\%&lt;/script&gt; chance to conclude a significant difference if it did not exist. 
In fact, we did encounter a type-I error. I know that for sure because:&lt;/p&gt;

&lt;p&gt;&amp;lt;div align=center&amp;gt;
&lt;b&gt;
Algo 1 and Algo 2 are the exact same algorithm
&lt;/b&gt;
&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;They are both the canonical implementation of DDPG &lt;a href=&quot;https://arxiv.org/pdf/1509.02971.pdf&quot;&gt;[Lillicrap et al., 2015]&lt;/a&gt;. The codebase can be found on this &lt;a href=&quot;https://github.com/openai/baselines&quot;&gt;repository&lt;/a&gt;. This means that &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; was the true hypothesis, there is no possible difference in the true means of the two algorithms. Our first conclusion was wrong, we committed a type-I error, rejecting &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when it was true. In our case, we selected the two tests so as to set the type-I error probability &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;5\%&lt;/script&gt;. However, statistical tests often make assumptions, which results in wrong estimations of the probability of the type-I error. We will see in the last section that the false positive rate was strongly under-evaluated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt;-tests assume &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-distributions of the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-values. Under some assumptions, they can compute analytically the &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value and the confidence interval &lt;script type=&quot;math/tex&quot;&gt;CI_2&lt;/script&gt; at level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;The Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test does not assume both algorithms have equal variances but the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test does.&lt;/li&gt;
  &lt;li&gt;The bootstrapped confidence interval test does not make assumptions on the performance distribution and estimates empirically the confidence interval &lt;script type=&quot;math/tex&quot;&gt;CI_1&lt;/script&gt; at level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;Selecting a test with a significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; enforces a type-I error &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; when the assumptions of the test are verified.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-theory-power-analysis-for-the-choice-of-the-sample-size&quot;&gt;The theory: power analysis for the choice of the sample size&lt;/h2&gt;

&lt;p&gt;We saw that &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; was enforced by the choice of the significance level in the test implementation. The second type of error &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; must now be estimated. &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; is the probability to fail to reject &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; when &lt;script type=&quot;math/tex&quot;&gt;H_a&lt;/script&gt; is true. When the effect size &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; and the probability of type-I error &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; are kept constant, &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; is a function of the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;. Choosing &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; so as to meet requirements on &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; is called &lt;em&gt;statistical power analysis&lt;/em&gt;. It answers the question: &lt;em&gt;what sample size do I need to have &lt;script type=&quot;math/tex&quot;&gt;1-\beta&lt;/script&gt; chance to detect an effect size &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt;, using a test with significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;?&lt;/em&gt; The next paragraphs present guidelines to choose &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; in the context of a Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test.&lt;/p&gt;

&lt;p&gt;As we saw above, &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; can be analytically computed as:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\beta = CDF_{H_0}(t_\alpha-t_{\epsilon}) = \int_{-\infty-t_{\epsilon}=-\infty}^{t_\alpha-t_{\epsilon}} T_{distrib}^{\nu}(\tau) \cdot d\tau,&lt;/script&gt;

&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;CDF_{H_0}&lt;/script&gt; is the cumulative distribution function of a &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-distribution centered on &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt; is the critical value for significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and 
&lt;script type=&quot;math/tex&quot;&gt;t_\epsilon&lt;/script&gt; is the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-value corresponding to an effect size &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt;. In the end, &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; depends on &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt;, (&lt;script type=&quot;math/tex&quot;&gt;s_1&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;s_2&lt;/script&gt;) the empirical standard deviations 
computed on two samples &lt;script type=&quot;math/tex&quot;&gt;(x_1,x_2)&lt;/script&gt; and the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 2&lt;/em&gt;&lt;/strong&gt;
To illustrate, we compare two DDPG variants: one with action perturbations (&lt;script type=&quot;math/tex&quot;&gt;Algo 1&lt;/script&gt;) &lt;a href=&quot;https://arxiv.org/pdf/1509.02971.pdf&quot;&gt;[Lillicrap et al., 2015]&lt;/a&gt;, the other with parameter perturbations (&lt;script type=&quot;math/tex&quot;&gt;Algo 2&lt;/script&gt;) &lt;a href=&quot;https://arxiv.org/pdf/1706.01905.pdf&quot;&gt;[Plappert et al., 2017]&lt;/a&gt;. Both algorithms are evaluated in the Half-Cheetah environment from the OpenAI Gym framework.&lt;/p&gt;

&lt;h3 id=&quot;step-1---running-a-pilot-study&quot;&gt;Step 1 - Running a pilot study&lt;/h3&gt;

&lt;p&gt;To compute &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;, we need estimates of the standard deviations of the two algorithms (&lt;script type=&quot;math/tex&quot;&gt;s_1, s_2&lt;/script&gt;). In this step, the algorithms are run in the environment to gather two samples &lt;script type=&quot;math/tex&quot;&gt;x_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;x_2&lt;/script&gt; of size &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;. From there, we can compute the empirical means &lt;script type=&quot;math/tex&quot;&gt;(\overline{x}_1, \overline{x}_2)&lt;/script&gt; and standard deviations &lt;script type=&quot;math/tex&quot;&gt;(s_1, s_2)&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 2 (continued)&lt;/em&gt;&lt;/strong&gt;
Here we run both algorithms with &lt;script type=&quot;math/tex&quot;&gt;n=5&lt;/script&gt;. We find empirical means &lt;script type=&quot;math/tex&quot;&gt;(\overline{x}_1, \overline{x}_2) = (3523, 4905)&lt;/script&gt; and empirical standard deviations &lt;script type=&quot;math/tex&quot;&gt;(s_1, s_2) = (1341, 990)&lt;/script&gt; for &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; (blue) and &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt; (red) respectively. From Figure 4, it seems there is a slight difference in the mean performances  &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}} =\overline{x}_2-\overline{x}_1 &gt;0&lt;/script&gt;. 
Running preliminary statistical tests at level &lt;script type=&quot;math/tex&quot;&gt;\alpha=0.05&lt;/script&gt; lead to a &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value of &lt;script type=&quot;math/tex&quot;&gt;0.1&lt;/script&gt; for the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test, and a bootstrapped confidence interval of &lt;script type=&quot;math/tex&quot;&gt;CI_1=[795, 2692]&lt;/script&gt; for the  value of &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}} = 1382&lt;/script&gt;. The Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test does not reject &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; (&lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value &lt;script type=&quot;math/tex&quot;&gt;&gt;\alpha&lt;/script&gt;) but the bootstrap test does (&lt;script type=&quot;math/tex&quot;&gt;0\not\in CI_1&lt;/script&gt;). One should compute &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; to estimate the chance that the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test missed an underlying performance difference (type-II error).&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/2/27f05ba5144eb210118dce202db75232d546f628.png&quot; height=&quot;300&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 4: DDPG with action perturbation versus DDPG with parameter perturbation tested in Half-Cheetah. Mean and 95% confidence interval computed over 5 seeds are reported. The figure shows a small difference in the empirical mean performances.&lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&quot;step-2---choosing-the-sample-size&quot;&gt;Step 2 - Choosing the sample size&lt;/h3&gt;
&lt;p&gt;Given a statistical test (Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test), a significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; (e.g. &lt;script type=&quot;math/tex&quot;&gt;\alpha=0.05&lt;/script&gt;) and empirical estimations of the standard deviations of &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt; (&lt;script type=&quot;math/tex&quot;&gt;s_1,s_2&lt;/script&gt;), one can compute &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; as a function of the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; and the effect size &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; one wants to be able to detect.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 2 (continued)&lt;/em&gt;&lt;/strong&gt;
For &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;[2,50]&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;[0.1,..,1]\times\overline{x}_1&lt;/script&gt;, we compute &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt; using the formulas given in Section \ref{sec:ttest}, as well as &lt;script type=&quot;math/tex&quot;&gt;t_{\epsilon}&lt;/script&gt; for each &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt;. Finally, we compute the corresponding probability of type-II error &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; using Equation~\ref{eq:beta}. Figure 5 shows the evolution of &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; as a function of &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; for the different &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt;. Considering the semi-dashed black line for &lt;script type=&quot;math/tex&quot;&gt;\epsilon=\overline{x}_{\text{diff}}=1382&lt;/script&gt;, we find &lt;script type=&quot;math/tex&quot;&gt;\beta=0.51&lt;/script&gt; for &lt;script type=&quot;math/tex&quot;&gt;N=5&lt;/script&gt;: there is &lt;script type=&quot;math/tex&quot;&gt;51\%&lt;/script&gt; chance of making a type-II error when trying to detect an effect &lt;script type=&quot;math/tex&quot;&gt;\epsilon=1382&lt;/script&gt;. To meet the requirement &lt;script type=&quot;math/tex&quot;&gt;\beta=0.2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; should be increased to &lt;script type=&quot;math/tex&quot;&gt;N=10&lt;/script&gt; (&lt;script type=&quot;math/tex&quot;&gt;\beta=0.19&lt;/script&gt;).&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/3/3a3d72a9dbef925bdfa272530e9cf45fc4239c8f.png&quot; height=&quot;300&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 5: Evolution of the probability of type-II error as a function of the sample size N for various effect sizes epsilon, when (s1, s2)= (1341, 990) and alpha=0.05. The requirement 0.2 is represented by the horizontal dashed black line.  &lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In our example, we find that &lt;script type=&quot;math/tex&quot;&gt;N=10&lt;/script&gt; was enough to be able to detect an effect size &lt;script type=&quot;math/tex&quot;&gt;\epsilon=1382&lt;/script&gt; with a Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test, using significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; and using empirical estimations &lt;script type=&quot;math/tex&quot;&gt;(s_1, s_2) = (1341, 990)&lt;/script&gt;. However, let us keep in mind that these computations use various approximations (&lt;script type=&quot;math/tex&quot;&gt;\nu, s_1, s_2&lt;/script&gt;) and make assumptions about the shape of the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-values distribution.&lt;/p&gt;

&lt;h3 id=&quot;step-3---running-the-statistical-tests&quot;&gt;Step 3 - Running the statistical tests&lt;/h3&gt;
&lt;p&gt;Both algorithms should be run so as to obtain a sample &lt;script type=&quot;math/tex&quot;&gt;x_{\text{diff}}&lt;/script&gt; of size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;. The statistical tests can be applied.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 2 (continued)&lt;/em&gt;&lt;/strong&gt;
Here, we take &lt;script type=&quot;math/tex&quot;&gt;N=10&lt;/script&gt; and run both the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test and the bootstrap test. We now find empirical means &lt;script type=&quot;math/tex&quot;&gt;(\overline{x}_1, \overline{x}_2) = (3690, 5323)&lt;/script&gt; and empirical standard deviations &lt;script type=&quot;math/tex&quot;&gt;(s_1, s_2) = (1086, 1454)&lt;/script&gt; for &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt; respectively. Both tests rejected &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;, with a &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt;-value of &lt;script type=&quot;math/tex&quot;&gt;0.0037&lt;/script&gt; for the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test and a confidence interval for the difference &lt;script type=&quot;math/tex&quot;&gt;\mu_{\text{diff}} \in [732,2612]&lt;/script&gt; for the bootstrap test. Both tests passed. In Figure 7, plots for &lt;script type=&quot;math/tex&quot;&gt;N=5&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;N=10&lt;/script&gt; can be compared. With a larger number of seeds, the difference that was not found significant with &lt;script type=&quot;math/tex&quot;&gt;N=5&lt;/script&gt; is now more clearly visible. With a larger number of seeds, the estimate &lt;script type=&quot;math/tex&quot;&gt;\overline{x}_{\text{diff}}&lt;/script&gt; is more robust, more evidence is available to support the claim that &lt;script type=&quot;math/tex&quot;&gt;Algo2&lt;/script&gt; outperforms &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt;, which translates to tighter confidence intervals represented in the figures.
\end{myex}&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/a/a763133041a1aa96d8a3ed6b9fabb4724d522ae5.png&quot; height=&quot;300&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 7: Performance of DDPG with action perturbation (Algo1) and parameter perturbation (Algo2) with N=5 seeds (left) and N=10 seeds (right). The 95% confidence intervals on the right are smaller, because more evidence is available (N larger). The underlying difference appears when N grows. &lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;
Given a sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;, a minimum effect size to detect &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; and a requirement on type-I error &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; the probability of type-II error &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; can be computed. This computation relies on the assumptions of the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test. 
The sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; should be chosen so as to meet the requirements on &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;.&lt;/p&gt;

&lt;h2 id=&quot;in-practice-influence-of-deviations-from-assumptions&quot;&gt;In practice: influence of deviations from assumptions&lt;/h2&gt;

&lt;p&gt;Under their respective assumptions, the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test and bootstrap test enforce the probability of type-I error to the selected significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;. These assumptions should be carefully checked, if one wants to report the probability of errors accurately. First, we propose to compute an empirical evaluation of the type-I error based on experimental data, and show that: 1) the bootstrap test is sensitive to small sample sizes; 2) the &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test might slightly under-evaluate the type-I error for non-normal data. Second, we show that inaccuracies in the estimation of the empirical standard deviations &lt;script type=&quot;math/tex&quot;&gt;s_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;s_2&lt;/script&gt; due to low sample size might lead to large errors in the computation of &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;, which in turn leads to under-estimate the sample size required for the experiment.&lt;/p&gt;

&lt;h3 id=&quot;empirical-estimation-of-the-type-i-error&quot;&gt;Empirical estimation of the type-I error&lt;/h3&gt;
&lt;p&gt;Remember, type-I errors occur when the null hypothesis (&lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt;) is rejected in favor of the alternative hypothesis &lt;script type=&quot;math/tex&quot;&gt;(H_a)&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; being correct. Given the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;, the probability of type-I error can be estimated as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run twice this number of trials (&lt;script type=&quot;math/tex&quot;&gt;2 \times N&lt;/script&gt;) for a given algorithm. This ensures that &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; is true because all measurements come from the same distribution.&lt;/li&gt;
  &lt;li&gt;Get average performance over two randomly drawn splits of size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;. Consider both splits as samples coming from two different algorithms.&lt;/li&gt;
  &lt;li&gt;Test for the difference of both fictive algorithms and record the outcome.&lt;/li&gt;
  &lt;li&gt;Repeat this procedure &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; times (e.g. &lt;script type=&quot;math/tex&quot;&gt;T=1000&lt;/script&gt;)&lt;/li&gt;
  &lt;li&gt;Compute the proportion of time &lt;script type=&quot;math/tex&quot;&gt;H_0&lt;/script&gt; was rejected. This is the empirical evaluation of &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Example 3&lt;/em&gt;&lt;/strong&gt;
We use &lt;script type=&quot;math/tex&quot;&gt;Algo1&lt;/script&gt; from Example 2. From &lt;script type=&quot;math/tex&quot;&gt;42&lt;/script&gt; available measures of performance, the above procedure is run for &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;[2,21]&lt;/script&gt;. Figure 8 presents the results. For small values of &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;, empirical estimations of the false positive rate are much larger than the supposedly enforced value &lt;script type=&quot;math/tex&quot;&gt;\alpha=0.05&lt;/script&gt;.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/d/de434feebaf9e814b05bdeadc97d593ec4cf3285.png&quot; height=&quot;300&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 8: Empirical estimations of the false positive rate on experimental data (Example 3) when N varies, using the Welch's t-test (blue) and the bootstrap confidence interval test (orange).  &lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;In our experiment, the bootstrap confidence interval test should not be used with small sample sizes (&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
&lt;10 %]]&gt;&lt;/script&gt;). Even in this case, the probability of type-I error (&lt;script type=&quot;math/tex&quot;&gt;\approx10\%&lt;/script&gt;) is under-evaluated by the test (&lt;script type=&quot;math/tex&quot;&gt;5\%&lt;/script&gt;). The Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test controls for this effect, because the test is much harder to pass when &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; is small (due to the increase of &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt;). However, the true (empirical) false positive rate might still be slightly under-evaluated. In this case, we might want to set the significance level to &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\alpha&lt;0.05 %]]&gt;&lt;/script&gt; to make sure the true positive rate stays below &lt;script type=&quot;math/tex&quot;&gt;0.05&lt;/script&gt;. In the bootstrap test, the error is due to the inability of small samples to correctly represent the underlying distribution, which impairs the enforcement of the false positive rate to the significance level &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;. Concerning the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test, this might be due to the non-normality of our data (whose histogram seems to reveal a bimodal distribution). In Example 1, we used &lt;script type=&quot;math/tex&quot;&gt;N=5&lt;/script&gt; and encountered a type-I error. We can see on the Figure 8 that the probability of this to happen was around &lt;script type=&quot;math/tex&quot;&gt;10\%&lt;/script&gt; for the bootstrap test and above &lt;script type=&quot;math/tex&quot;&gt;5\%&lt;/script&gt; for the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test.&lt;/p&gt;

&lt;h3 id=&quot;influence-of-the-empirical-standard-deviations&quot;&gt;Influence of the empirical standard deviations&lt;/h3&gt;
&lt;p&gt;The Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test computes &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-statistics and the degree of freedom &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt; based on the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; and the empirical estimations of standard deviations &lt;script type=&quot;math/tex&quot;&gt;s_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;s_2&lt;/script&gt;. When &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; is low, estimations &lt;script type=&quot;math/tex&quot;&gt;s_1&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;s_2&lt;/script&gt; under-estimate the true standard deviation in average. Under-estimating &lt;script type=&quot;math/tex&quot;&gt;(s_1,s_2)&lt;/script&gt; leads to smaller &lt;script type=&quot;math/tex&quot;&gt;\nu&lt;/script&gt; and lower &lt;script type=&quot;math/tex&quot;&gt;t_\alpha&lt;/script&gt;, which in turn leads to lower estimations of &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;. Finally, finding lower &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; leads to the selection of smaller sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; to meet &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; requirements. We found this had a significant effect on the computation of &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;. Figure 9 shows &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; the false negative rate when trying to detect effects of size &lt;script type=&quot;math/tex&quot;&gt;\epsilon&lt;/script&gt; between two normal distributions &lt;script type=&quot;math/tex&quot;&gt;\mathcal{N}(3,1)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mathcal{N}(3+\epsilon,1)&lt;/script&gt;. The only difference between both figures is that the left one uses the true values of &lt;script type=&quot;math/tex&quot;&gt;\sigma_1, \sigma_2&lt;/script&gt; to compute &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;, whereas the right figure uses (inaccurate) empirical evaluations &lt;script type=&quot;math/tex&quot;&gt;s_1,s_2&lt;/script&gt; to compute &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;. We can see that the estimation of standard deviations influences the computation of &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;, and the subsequent choice of an appropriate sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; to meet requirements on &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt;. See our &lt;a href=&quot;&quot;&gt;paper&lt;/a&gt; for further details.&lt;/p&gt;

&lt;div align=&quot;center&quot;&gt;
&lt;img src=&quot;https://openlab-flowers.inria.fr/uploads/default/original/2X/b/bc0a4ca746dbe03c78182969c67ca2bd8a015e80.png&quot; height=&quot;300&quot; /&gt;
&lt;div&gt;
&lt;sub&gt;
&lt;i&gt;Figure 9: Evolution of the probability of type-II error as a function of the sample size N and the effect size epsilon, when (s1, s2)= (1-error, 1-error) and alpha=0.05. Left: error=0, this is the ideal case. Right: error=0.40, a large error that can be made when evaluating s over n=5 samples. The compared distributions are normal, one is centered on 3, the other on 3+\epsilon. &lt;/i&gt;&lt;/sub&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;One should not blindly believe in statistical tests results. These tests are based on assumptions that are not always reasonable.&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; must be empirically estimated, as the statistical tests might underestimate it, because of wrong assumptions about the underlying distributions or because of the small sample size.&lt;/li&gt;
  &lt;li&gt;The bootstrap test evaluation of type-I error is strongly dependent on the sample size. A bootstrap test should not be used with less than &lt;script type=&quot;math/tex&quot;&gt;20&lt;/script&gt; samples.&lt;/li&gt;
  &lt;li&gt;The inaccuracies in the estimation of the standard deviations of the algorithms (&lt;script type=&quot;math/tex&quot;&gt;s_1,s_2&lt;/script&gt;), due to small sample sizes &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; in the preliminary study, lead to under-estimate the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; required to meet requirements in type-II errors.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this post, I detailed the statistical problem of comparing the performance of two RL algorithms. I defined type-I and type-II errors and proposed ad-hoc statistical tests to test for performance difference. Finally, I detailed how to pick the right number of random seeds (your sample size) so as to reach the requirements in terms of type-I and II errors and illustrated the process with a practical example.&lt;/p&gt;

&lt;p&gt;The most important part is what came after. We challenged the hypotheses made by the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test and the bootstrap test and found several problems. First, we showed significant difference between empirical estimations of the false positive rate in our experiment and the theoretical values supposedly enforced by both tests. As a result, the bootstrap test should not be used with less than &lt;script type=&quot;math/tex&quot;&gt;N=20&lt;/script&gt; samples and tighter significance level should be used to enforce a reasonable false positive rate (&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
&lt;0.05 %]]&gt;&lt;/script&gt;). Second, we show that the estimation of the sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; required to meet requirements in type-II error were strongly dependent on the accuracy of (&lt;script type=&quot;math/tex&quot;&gt;s_1,s_2&lt;/script&gt;). To compensate the under-estimation of &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; should be chosen systematically larger than what the power analysis prescribes.&lt;/p&gt;

&lt;h2 id=&quot;final-recommendations&quot;&gt;Final recommendations&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Use the Welch’s &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;-test over the bootstrap confidence interval test.&lt;/li&gt;
  &lt;li&gt;Set the significance level of a test to lower values (&lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
\alpha&lt;0.05 %]]&gt;&lt;/script&gt;) so as to make sure the probability of type-I error (empirical &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt;) keeps below &lt;script type=&quot;math/tex&quot;&gt;0.05&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;Correct for multiple comparisons in order to avoid the linear growth of false positive with the number of experiments.&lt;/li&gt;
  &lt;li&gt;Use at least &lt;script type=&quot;math/tex&quot;&gt;n=20&lt;/script&gt; samples in the pilot study to compute robust estimates of the standard deviations of both algorithms.&lt;/li&gt;
  &lt;li&gt;Use larger sample size &lt;script type=&quot;math/tex&quot;&gt;N&lt;/script&gt; than the one prescribed by the power analysis. This helps compensating for potential inaccuracies in the estimations of the standard deviations of the algorithms and reduces the probability of type-II errors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that I am not a statistician. If you spot any approximation or mistake in the text above, please feel free to report corrections or clarifications.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Henderson, P., Islam, R., Bachman, P., Pineau, J., Precup, D., &amp;amp; Meger, D. (2017). Deep Reinforcement Learning that Matters. &lt;a href=&quot;https://arxiv.org/pdf/1709.06560.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mnih, V.; Badia, A. P.; Mirza, M.; Graves, A.; Lillicrap, T.; Harley, T.; Silver, D.; and Kavukcuoglu, K. 2016. Asynchronous methods for deep reinforcement learning. In International Conference on Machine Learning, 1928–1937. &lt;a href=&quot;http://proceedings.mlr.press/v48/mniha16.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Schulman, J.; Wolski, F.; Dhariwal, P.; Radford, A.; and Klimov, O. 2017. Proximal policy optimization algorithms. &lt;a href=&quot;https://arxiv.org/pdf/1707.06347.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Duan, Y.; Chen, X.; Houthooft, R.; Schulman, J.; and Abbeel, P. 2016. Benchmarking deep reinforcement learning for continuous control. In Proceedings of the 33rd International Conference on Machine Learning (ICML). &lt;a href=&quot;http://proceedings.mlr.press/v48/duan16.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Gu, S.; Lillicrap, T.; Ghahramani, Z.; Turner, R. E.; Schölkopf, B.;
and Levine, S. 2017. Interpolated policy gradient: Merging on-policy and off-policy gradient estimation for deep reinforcement learning. &lt;a href=&quot;http://papers.nips.cc/paper/6974-interpolated-policy-gradient-merging-on-policy-and-off-policy-gradient-estimation-for-deep-reinforcement-learning.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lillicrap, T. P.; Hunt, J. J.; Pritzel, A.; Heess, N.; Erez, T.; Tassa, Y.; Silver, D.; andWierstra, D. 2015. Continuous control with deep reinforcement learning. &lt;a href=&quot;https://arxiv.org/pdf/1509.02971.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Schulman, J.; Levine, S.; Abbeel, P.; Jordan, M.; and Moritz, P. 2015a. Trust region policy optimization. In Proceedings of the 32nd International Conference on Machine Learning (ICML). &lt;a href=&quot;www.jmlr.org/proceedings/papers/v37/schulman15.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wu, Y.; Mansimov, E.; Liao, S.; Grosse, R.; and Ba, J. 2017. Scalable trust-region method for deep reinforcement learning using kronecker-factored approximation. &lt;a href=&quot;http://papers.nips.cc/paper/7112-scalable-trust-region-method-for-deep-reinforcement-learning-using-kronecker-factored-approximation.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Plappert, M., Houthooft, R., Dhariwal, P., Sidor, S., Chen, R. Y., Chen, X., … &amp;amp; Andrychowicz, M. (2017). Parameter space noise for exploration. &lt;a href=&quot;https://arxiv.org/pdf/1706.01905.pdf&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;code&quot;&gt;Code&lt;/h2&gt;
&lt;p&gt;The code is available on Github &lt;a href=&quot;https://github.com/flowersteam/rl-difference-testing&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;paper&quot;&gt;Paper&lt;/h2&gt;
&lt;p&gt;The paper can be found on ArXiv &lt;a href=&quot;https://arxiv.org/abs/1806.08295&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;contact&quot;&gt;Contact&lt;/h2&gt;
&lt;p&gt;Email: cedric.colas@inria.fr&lt;/p&gt;

&lt;hr /&gt;

&lt;h6 id=&quot;subscribe-to-our-rss-feed&quot;&gt;Subscribe to our &lt;a href=&quot;https://openlab-flowers.inria.fr/c/blog.rss&quot;&gt;RSS Feed&lt;/a&gt;.&lt;/h6&gt;
&lt;h6 id=&quot;subscribe-to-our-mailing-list&quot;&gt;Subscribe to our &lt;a href=&quot;https://sympa.inria.fr/sympa/subscribe/flowers-blog&quot;&gt;mailing list&lt;/a&gt;.&lt;/h6&gt;
</description>
        <pubDate>Tue, 08 Jan 2019 12:21:29 +0100</pubDate>
        <link>http://localhost:4000/how_many_random_seeds</link>
        <guid isPermaLink="true">http://localhost:4000/how_many_random_seeds</guid>
      </item>
    
      <item>
        <title>Announcing Version 2.0</title>
        <description>&lt;p&gt;In an effort to make Pixyll easier to customize and more aesthetically pleasing, we’ve released version &lt;code class=&quot;highlighter-rouge&quot;&gt;2.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pixyll now features:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Line anchors in code blocks and new syntax highlighting&lt;/li&gt;
  &lt;li&gt;A customizable variables file&lt;/li&gt;
  &lt;li&gt;Modular, and lighter weight CSS&lt;/li&gt;
  &lt;li&gt;No more &lt;code class=&quot;highlighter-rouge&quot;&gt;max-width&lt;/code&gt; media queries&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 11 Jul 2015 00:00:00 +0200</pubDate>
        <link>http://localhost:4000/jekyll/pixyll/2015/07/11/announcing-pixyll-version-2/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/pixyll/2015/07/11/announcing-pixyll-version-2/</guid>
      </item>
    
      <item>
        <title>Hello, Pixyll</title>
        <description>&lt;p&gt;Hello.&lt;/p&gt;

&lt;p&gt;Pixyll is a simple, beautiful theme for Jekyll that emphasizes content rather than aesthetic fluff. It’s mobile &lt;em&gt;first&lt;/em&gt;, fluidly responsive, and delightfully lightweight.&lt;/p&gt;

&lt;p&gt;It’s pretty minimal, but leverages large type and drastic contrast to make a statement, on all devices.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;
    Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.
  &lt;/p&gt;
  &lt;footer&gt;&lt;cite title=&quot;Antoine de Saint-Exupéry&quot;&gt;Antoine de Saint-Exupéry&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;where-is-it&quot;&gt;Where is it?&lt;/h2&gt;

&lt;p&gt;Checkout the &lt;a href=&quot;https://github.com/johnotander/pixyll&quot;&gt;Github repository&lt;/a&gt; to download it, request a feature, or report a bug.&lt;/p&gt;

&lt;p&gt;It’s free, and open source (&lt;a href=&quot;http://opensource.org/licenses/MIT&quot;&gt;MIT&lt;/a&gt;).&lt;/p&gt;
</description>
        <pubDate>Wed, 11 Jun 2014 17:31:19 +0200</pubDate>
        <link>http://localhost:4000/jekyll/pixyll/2014/06/11/welcome-to-pixyll/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/pixyll/2014/06/11/welcome-to-pixyll/</guid>
      </item>
    
      <item>
        <title>Pixyll in Action</title>
        <description>&lt;p&gt;There is a significant amount of subtle, yet precisely calibrated, styling to ensure
that your content is emphasized while still looking aesthetically pleasing.&lt;/p&gt;

&lt;p&gt;All links are easy to &lt;a href=&quot;#&quot;&gt;locate and discern&lt;/a&gt;, yet don’t detract from the &lt;a href=&quot;#&quot;&gt;harmony
of a paragraph&lt;/a&gt;. The &lt;em&gt;same&lt;/em&gt; goes for italics and &lt;strong&gt;bold&lt;/strong&gt; elements. Even the the strikeout
works if &lt;del&gt;for some reason you need to update your post&lt;/del&gt;. For consistency’s sake,
&lt;ins&gt;The same goes for insertions&lt;/ins&gt;, of course.&lt;/p&gt;

&lt;h3 id=&quot;code-with-syntax-highlighting&quot;&gt;Code, with syntax highlighting&lt;/h3&gt;

&lt;p&gt;Here’s an example of some ruby code with line anchors.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# The most awesome of classes&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Awesome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;EvenMoreAwesome&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;validates_presence_of&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:something&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;validates&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;email_format: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;favorite_number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'created awesomeness'&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;email_format&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/\S+@\S+\.\S+/&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s some CSS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.foobar&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;/* Named colors rule */&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;tomato&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s some JavaScript:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isPresent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'is-present'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;things&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isPresent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;things&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;doOtherStuff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;things&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s some HTML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;m0 p0 bg-blue white&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;h1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hello, world!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;headings&quot;&gt;Headings!&lt;/h1&gt;

&lt;p&gt;They’re responsive, and well-proportioned (in &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;line-height&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;font-size&lt;/code&gt;).
They also heavily rely on the awesome utility, &lt;a href=&quot;http://www.basscss.com/&quot;&gt;BASSCSS&lt;/a&gt;.&lt;/p&gt;

&lt;h5 id=&quot;they-draw-the-perfect-amount-of-attention&quot;&gt;They draw the perfect amount of attention&lt;/h5&gt;

&lt;p&gt;This allows your content to have the proper informational and contextual hierarchy. Yay.&lt;/p&gt;

&lt;h3 id=&quot;there-are-lists-too&quot;&gt;There are lists, too&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Apples&lt;/li&gt;
  &lt;li&gt;Oranges&lt;/li&gt;
  &lt;li&gt;Potatoes&lt;/li&gt;
  &lt;li&gt;Milk&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Mow the lawn&lt;/li&gt;
  &lt;li&gt;Feed the dog&lt;/li&gt;
  &lt;li&gt;Dance&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;images-look-great-too&quot;&gt;Images look great, too&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/1424573/3378137/abac6d7c-fbe6-11e3-8e09-55745b6a8176.png&quot; alt=&quot;desk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/1424573/3378137/abac6d7c-fbe6-11e3-8e09-55745b6a8176.png&quot; alt=&quot;desk&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;there-are-also-pretty-colors&quot;&gt;There are also pretty colors&lt;/h3&gt;

&lt;p&gt;Also the result of &lt;a href=&quot;http://www.basscss.com/&quot;&gt;BASSCSS&lt;/a&gt;, you can &lt;span class=&quot;bg-dark-gray white&quot;&gt;highlight&lt;/span&gt; certain components
of a &lt;span class=&quot;red&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;mid-gray&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;green&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;orange&quot;&gt;classes&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;I don’t recommend using blue, though. It looks like a &lt;span class=&quot;blue&quot;&gt;link&lt;/span&gt;.&lt;/p&gt;

&lt;h3 id=&quot;footnotes&quot;&gt;Footnotes!&lt;/h3&gt;

&lt;p&gt;Markdown footnotes are supported, and they look great! Simply put e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;[^1]&lt;/code&gt; where you want the footnote to appear,&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; and then add
the reference at the end of your markdown.&lt;/p&gt;

&lt;h3 id=&quot;stylish-blockquotes-included&quot;&gt;Stylish blockquotes included&lt;/h3&gt;

&lt;p&gt;You can use the markdown quote syntax, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; for simple quotes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse quis porta mauris.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, you need to inject html if you’d like a citation footer. I will be working on a way to
hopefully sidestep this inconvenience.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;
    Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.
  &lt;/p&gt;
  &lt;footer&gt;&lt;cite title=&quot;Antoine de Saint-Exupéry&quot;&gt;Antoine de Saint-Exupéry&lt;/cite&gt;&lt;/footer&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;tables&quot;&gt;Tables&lt;/h3&gt;

&lt;p&gt;Tables represent tabular data and can be built using markdown syntax.  They are rendered responsively in Pixyll for a variety of screen widths.&lt;/p&gt;

&lt;p&gt;Here’s a simple example of a table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Quantity&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Orange&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$0.99&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Pineapple&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$2.99&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Banana&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$0.39&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;$6.14&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;p&gt;A table must have a body of one or more rows, but can optionally also have a header or footer.&lt;/p&gt;

&lt;p&gt;The cells in a column, including the header row cell, can either be aligned:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;left,&lt;/li&gt;
  &lt;li&gt;right or&lt;/li&gt;
  &lt;li&gt;center.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most inline text formatting is available in table cells, block-level formatting are not.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Default header&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Left header&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Center header&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Right header&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Default&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Left&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Center&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;em&gt;Italic&lt;/em&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Bold&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;&lt;em&gt;Bold italic&lt;/em&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;monospace&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;#&quot;&gt;link text&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;code&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;del&gt;Strikeout&lt;/del&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;ins&gt;Insertion&lt;ins&gt;&lt;/ins&gt;&lt;/ins&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;line&lt;br /&gt;break&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;“Smart quotes”&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;mark&gt;highlight&lt;/mark&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;span class=&quot;green&quot;&gt;green&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Footnote&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;sub&gt;subscript&lt;/sub&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;&lt;sup&gt;superscript&lt;/sup&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;span class=&quot;red&quot;&gt;red&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Footer row&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;h3 id=&quot;theres-more-being-added-all-the-time&quot;&gt;There’s more being added all the time&lt;/h3&gt;

&lt;p&gt;Checkout the &lt;a href=&quot;https://github.com/johnotander/pixyll&quot;&gt;Github repository&lt;/a&gt; to request,
or add, features.&lt;/p&gt;

&lt;p&gt;Happy writing.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Important information that may distract from the main text can go in footnotes. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;Footnotes will work in tables since they’re just links. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 10 Jun 2014 14:31:19 +0200</pubDate>
        <link>http://localhost:4000/jekyll/pixyll/2014/06/10/see-pixyll-in-action/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/pixyll/2014/06/10/see-pixyll-in-action/</guid>
      </item>
    
      <item>
        <title>So, What is Jekyll?</title>
        <description>&lt;p&gt;Jekyll is a tool for transforming your plain text into static websites and 
blogs. It is simple, static, and blog-aware. Jekyll uses the 
&lt;a href=&quot;http://docs.shopify.com/themes/liquid-basics&quot;&gt;Liquid&lt;/a&gt; templating
language and has builtin &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;
and &lt;a href=&quot;http://en.wikipedia.org/wiki/Textile_(markup_language)&quot;&gt;Textile&lt;/a&gt; support.&lt;/p&gt;

&lt;p&gt;It also ties in nicely to &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Learn more about Jekyll on their &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 Jun 2014 14:32:18 +0200</pubDate>
        <link>http://localhost:4000/jekyll/pixyll/2014/06/09/so-what-is-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/jekyll/pixyll/2014/06/09/so-what-is-jekyll/</guid>
      </item>
    
  </channel>
</rss>
